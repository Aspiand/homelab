name: infra

services:
  # watchtower:
  #   container_name: watchtower
  #   image: containrrr/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /etc/localtime:/etc/localtime:ro
  #   env_file:
  #     - .env
  #   command: --label-enable --cleanup

  tailscale:
    container_name: tailscale
    image: ghcr.io/tailscale/tailscale:latest
    hostname: ${TS_HOSTNAME}
    network_mode: host
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - ts-authkey:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true

  tsdproxy:
    image: almeidapaulopt/tsdproxy:1
    container_name: tsdproxy
    networks:
      - tsdproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/config
      - tsdproxy-data:/data
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    env_file:
      - .env
    # ports:
    #   - 8080:8080
    restart: unless-stopped

  cloudflare-tunnel:
    image: docker.io/cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    networks:
      - cloudflare
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # - ./config/hosts:/etc/hosts
    environment:
      - "TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}"
    labels:
      com.centurylinklabs.watchtower.enable: true

  beszel:
    image: henrygd/beszel:latest
    container_name: beszel
    restart: unless-stopped
    # ports:
    #   - 8090:8090
    networks:
      - tsdproxy
    volumes:
      - ./beszel_data:/beszel_data
      - ./beszel_socket:/beszel_socket
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "beszel"
      com.centurylinklabs.watchtower.enable: true

  beszel-agent:
    image: henrygd/beszel-agent:latest
    container_name: beszel-agent
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./beszel_socket:/beszel_socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      LISTEN: /beszel_socket/beszel.sock
      KEY: '${BESZEL_KEY}' # Do not remove quotes around the key
    depends_on:
      - beszel
    labels:
      com.centurylinklabs.watchtower.enable: true

volumes:
  ts-authkey:
  tsdproxy-data:

networks:
  default:
    name: infra
    driver: bridge
  cloudflare:
    name: cloudflare_tunnel
    driver: bridge
  tsdproxy:
    name: tsdproxy
    driver: bridge
