name: infra

services:
  # watchtower:
  #   container_name: watchtower
  #   image: containrrr/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /etc/localtime:/etc/localtime:ro
  #   env_file:
  #     - .env
  #   command: --label-enable --cleanup

  # npm:
  #   container_name: nginx-proxy-manager
  #   image: 'docker.io/jc21/nginx-proxy-manager:latest'
  #   restart: unless-stopped
  #   ports:
  #     - '80:80'
  #     - '81:81'
  #     - '443:443'
  #   volumes:
  #     - ./data:/data
  #     - ./letsencrypt:/etc/letsencrypt

  tailscale:
    container_name: tailscale
    image: ghcr.io/tailscale/tailscale:latest
    hostname: ${TS_HOSTNAME}
    network_mode: host
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - ts-authkey:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    restart: unless-stopped

  cloudflare-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    hostname: cloudflare-tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    networks:
      - cloudflare
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # - ./config/hosts:/etc/hosts
    environment:
      - "TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}"
    # healthcheck:
    #   test: [ "CMD", "cloudflared", "--version" ]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 10s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  ts-authkey:
    driver: local

networks:
  default:
  cloudflare:
    name: cloudflare_tunnel
    driver: bridge
